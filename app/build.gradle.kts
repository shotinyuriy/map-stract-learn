import java.nio.charset.StandardCharsets

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    application
    java
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
    charset(StandardCharsets.UTF_8.name())
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenLocal()
    mavenCentral()
}

val lombokVersion by extra("1.18.30")
val mapStructVersion by extra("1.5.5.Final")

dependencies {
    // Lombok
    compileOnly("org.projectlombok:lombok:${lombokVersion}")
    annotationProcessor("org.projectlombok:lombok:${lombokVersion}")
    testCompileOnly("org.projectlombok:lombok:${lombokVersion}")
    testAnnotationProcessor("org.projectlombok:lombok:${lombokVersion}")

    // MapStruct
    implementation("org.mapstruct:mapstruct:${mapStructVersion}")
    annotationProcessor("org.mapstruct:mapstruct-processor:${mapStructVersion}")

    // This dependency is used by the application.
    implementation("com.google.guava:guava:31.0.1-jre")

    // Use JUnit Jupiter for testing.
    testImplementation("org.junit.jupiter:junit-jupiter:5.8.2")
}

application {
    // Define the main class for the application.
    mainClass.set("map.struct.learn.App")
}

tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

tasks.withType<JavaCompile>() {
    options.encoding = StandardCharsets.UTF_8.name()
}

tasks.named<JavaExec>("run") {
//    System.setProperty("file.encoding", StandardCharsets.UTF_8.name())
//    System.setProperty("console.encoding", StandardCharsets.UTF_8.name())
    defaultCharacterEncoding = StandardCharsets.UTF_8.name()
//    defaultCharacterEncoding = "Windows-1251"
}